services:
    aws:
        image: localstack/localstack:4.3.0
        container_name: aws
        volumes:
            - localstack_data:/var/lib/localstack
        environment:
            - GATEWAY_LISTEN=0.0.0.0:4566
        ports:
            - 4566:4566
        networks:
            - aws-network

    terraform:
        image: hashicorp/terraform:1.11
        container_name: terraform
        depends_on:
            - aws
        working_dir: /workspace
        entrypoint: ["/bin/sh", "-c"]
        command: >
            "
              terraform init \ &&
              terraform apply -auto-approve \ &&
              sleep infinity
            "
        volumes:
            - ./infra/iac/main.development.tf:/workspace/main.tf
            - ./infra/iac/backend.development.tf:/workspace/backend.tf
            - ./infra/iac/variables.tf:/workspace/variables.tf
            - ./infra/iac/provider.tf:/workspace/provider.tf
            - ./.env.development:/workspace/.env.development
            - terraform_state:/workspace/.terraform
            - terraform_data:/workspace
        environment:
            TF_VAR_AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            TF_VAR_AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            TF_VAR_AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
            TF_VAR_EMAIL_SERVICE_QUEUE_NAME: ${EMAIL_SERVICE_QUEUE_NAME}
            TF_VAR_ORDER_SERVICE_QUEUE_NAME: ${ORDER_SERVICE_QUEUE_NAME}
            TF_VAR_AWS_ENDPOINT: http://aws:4566
        networks:
            - aws-network

    postgres:
        image: postgres:15
        container_name: postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - 5432:5432
        networks:
            - techcommerce-network
        volumes:
            - ./infra/databases/init.development.sql:/docker-entrypoint-initdb.d/init.sql
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            retries: 5

    kong:
        volumes:
            - ./services/gateway/kong.development.yml:/etc/kong/kong.yml:ro
        extra_hosts:
            - "host.docker.internal:host-gateway"

    swagger-ui:
        image: swaggerapi/swagger-ui
        container_name: swagger-ui
        depends_on:
            - kong
        ports:
            - 81:8080
        environment:
            API_URL: http://host.docker.internal:8082/order/api-docs

networks:
    aws-network:
        name: aws-network
        driver: bridge

volumes:
    localstack_data:
        name: localstack_data
    terraform_state:
        name: terraform_state
    terraform_data:
        name: terraform_data
    postgres_data:
        name: postgres_data
